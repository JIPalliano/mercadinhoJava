plugins {
	id 'java'
	id 'application'
	id 'org.springframework.boot' version '3.4.1'
	id 'io.spring.dependency-management' version '1.1.6'
	id 'info.solidsoft.pitest' version '1.15.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

application {
	mainClass = 'com.example.mercadinho.MercadinhoApplication'
}

subprojects {
	task('hello').doLast {
		print "olá eu sou $project.name"
	}
}

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
	maven { url 'https://repo.spring.io/milestone' }
	maven { url 'https://repo.spring.io/snapshot' }
}

ext{
	set('spring-security.version','6.3.3')
	set('springCloudVersion','2024.0.0')
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-webflux'
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.6.0'
	implementation 'com.auth0:java-jwt:4.4.0'
	implementation 'org.pitest:pitest:1.17.2'
	implementation 'org.apache.kafka:kafka-streams'
	implementation 'org.springframework.cloud:spring-cloud-starter-gateway:4.2.0'
	implementation 'org.springframework.kafka:spring-kafka'
	testImplementation 'org.springframework.kafka:spring-kafka-test'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	developmentOnly 'org.springframework.boot:spring-boot-docker-compose'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo:4.18.0'
	testImplementation 'org.springframework.security:spring-security-test'
	implementation 'org.pitest:pitest-junit5-plugin:1.2.1'
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.11.3'

}

dependencyManagement {
	imports {
		mavenBom 'org.springframework.security:spring-security-bom:6.4.0'
		mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
	}
}

pitest {
	junit5PluginVersion = '1.2.1'
	pitestVersion = '1.17.2'
	targetClasses = ['com.example.mercadinho.service.*']
	verbose = true
	threads = 2
	outputFormats = ['HTML']
	mutators = ['ALL']
}

tasks.named('bootBuildImage') {
	builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.register('task_test') {
	doLast {
		println 'Executando a criação de uma task!'
	}
}

tasks.named('task_test') {
	group = 'test'
	description = 'Task para testar o tasks.named'
	doLast {
		println 'Configuração adicional aplicada à task nometask.'
	}
}

task 'new_test_task'{
	doLast{
		println 'executando um teste de uma task'
	}
}

tasks.named('test') {
	useJUnitPlatform()
}